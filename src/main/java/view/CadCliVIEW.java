/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.CadCliDAO;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import javax.swing.*;

import vo.CadCliVO;

import java.util.List;
import java.util.Arrays;

/**
 * @author João
 */
public class CadCliVIEW extends javax.swing.JFrame {

    /**
     * Creates new form CadCliVIEW
     */
    public CadCliVIEW() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCadCli = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        lblRg = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblDtNasc = new javax.swing.JLabel();
        lblTelFixo = new javax.swing.JLabel();
        txtInputNome = new javax.swing.JTextField();
        lblCpf = new javax.swing.JLabel();
        txtInputRg = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        txtInputDtNasc = new javax.swing.JTextField();
        txtInputCpf = new javax.swing.JTextField();
        txtInputEmail = new javax.swing.JTextField();
        txtInputTelFixo = new javax.swing.JTextField();
        lblCelResponsavel = new javax.swing.JLabel();
        txtInputEndereco = new javax.swing.JTextField();
        txtInputCelular = new javax.swing.JTextField();
        txtInputCelResponsavel = new javax.swing.JTextField();
        btnIncluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        lblResponsavel = new javax.swing.JLabel();
        txtInputResponsavel = new javax.swing.JTextField();
        lblPeriodo = new javax.swing.JLabel();
        lblHorario = new javax.swing.JLabel();
        lblModalidade = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        comboBoxHorario = new javax.swing.JComboBox<>();
        lblSexo1 = new javax.swing.JLabel();
        comboBoxSexo = new javax.swing.JComboBox<>();
        comboBoxModalidade = new javax.swing.JComboBox<>();
        comboBoxPeriodo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblCadCli.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblCadCli.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCadCli.setText("Cadastro de Alunos");

        lblCodigo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCodigo.setText("Código:");

        lblNome.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNome.setText("Nome:");

        lblEndereco.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEndereco.setText("Endereço:");

        lblRg.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblRg.setText("RG:");

        lblEmail.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblEmail.setText("Email:");

        lblDtNasc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDtNasc.setText("Dt. Nasc.:");

        lblTelFixo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTelFixo.setText("Tel.Fixo:");

        txtInputNome.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblCpf.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCpf.setText("CPF:");

        txtInputRg.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblCelular.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCelular.setText("Cel.:");

        txtInputDtNasc.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtInputCpf.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtInputEmail.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtInputTelFixo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblCelResponsavel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCelResponsavel.setText("Cel. Resp:");

        txtInputEndereco.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtInputCelular.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        txtInputCelResponsavel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btnIncluir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConsultar.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        lblResponsavel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblResponsavel.setText("Responsável:");

        txtInputResponsavel.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        lblPeriodo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblPeriodo.setText("Período:");

        lblHorario.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblHorario.setText("Horário:");

        lblModalidade.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblModalidade.setText("Modalidade:");

        txtCodigo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        comboBoxHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Manhã", "Tarde", "Noite" }));
        comboBoxHorario.setToolTipText("Escolha uma modalidade");

        lblSexo1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblSexo1.setText("Sexo:");

        comboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Masculino", "Feminino", "Outro" }));

        comboBoxModalidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Judô", "Capoeira", "Natação", "Futebol", "Atletismo", "Basquete", "Vôlei" }));
        comboBoxModalidade.setToolTipText("Escolha uma modalidade");

        comboBoxPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--", "Manhã", "Tarde", "Noite" }));
        comboBoxPeriodo.setToolTipText("Escolha uma modalidade");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(260, 260, 260)
                        .addComponent(lblCadCli, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCodigo)
                                    .addComponent(lblNome)
                                    .addComponent(lblEndereco)
                                    .addComponent(lblRg)
                                    .addComponent(lblEmail))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtInputEndereco, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtInputRg, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblCpf)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtInputCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lblCelular)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtInputCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblDtNasc)
                                        .addGap(27, 27, 27)
                                        .addComponent(txtInputDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(55, 55, 55)
                                                .addComponent(btnConsultar))
                                            .addComponent(txtInputNome, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtInputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblResponsavel)
                                    .addComponent(lblPeriodo))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(comboBoxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(lblHorario)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboBoxHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtInputResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(75, 75, 75)
                                                .addComponent(lblTelFixo))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(63, 63, 63)
                                                .addComponent(lblCelResponsavel)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtInputCelResponsavel)
                                            .addComponent(txtInputTelFixo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addComponent(lblSexo1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(comboBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(lblModalidade)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(comboBoxModalidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(2, 2, 2)))))
                        .addGap(28, 28, 28))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblCadCli)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsultar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txtInputNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEndereco)
                            .addComponent(txtInputEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRg)
                            .addComponent(txtInputRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCpf)
                            .addComponent(txtInputCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCelular)
                            .addComponent(txtInputCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtInputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblResponsavel)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPeriodo)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblHorario)
                                .addComponent(comboBoxHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboBoxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDtNasc)
                            .addComponent(txtInputDtNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTelFixo)
                            .addComponent(txtInputTelFixo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInputCelResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCelResponsavel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModalidade)
                            .addComponent(comboBoxModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInputResponsavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSexo1)
                            .addComponent(comboBoxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIncluir)
                    .addComponent(btnAlterar)
                    .addComponent(btnCancelar)
                    .addComponent(btnExcluir)
                    .addComponent(btnSair))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // FUNCIONA
    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        JFrame frame = new JFrame("Exit");

        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente sair?", "Confirmação de Saída",
                JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        btnIncluir.setEnabled(true);
        btnAlterar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnExcluir.setEnabled(true);
        btnConsultar.setEnabled(true);
        btnSair.setEnabled(true);

        // Instanciando classes utilizadas
        CadCliDAO dao = new CadCliDAO();
        CadCliVO vo = new CadCliVO();

        // Capturando dados da caixa de texto que serão excluídos
        vo.setNomeAluno(txtInputNome.getText().toUpperCase());
        vo.setEndereco(txtInputEndereco.getText().toUpperCase());
        vo.setRg(txtInputRg.getText());
        vo.setCpf(txtInputCpf.getText());
        vo.setDtnasc(txtInputDtNasc.getText());
        vo.setCelular(txtInputCelular.getText());
        vo.setEmail(txtInputEmail.getText().toUpperCase());
        vo.setResponsavel(txtInputTelFixo.getText());
        vo.setCelularResponsavel(txtInputCelResponsavel.getText());

        // Chamando método deleteCliente
        dao.deleteCliente(vo);

        // Limpando caixas de texto
        txtInputNome.setText("");
        txtInputEndereco.setText("");
        txtInputRg.setText("");
        txtInputCpf.setText("");
    }//GEN-LAST:event_btnExcluirActionPerformed

    // Botão INCLUIR
    // FUNCIONA
    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {
        // Lista de componentes obrigatórios
        List<JComponent> obrigatorios;
        obrigatorios = Arrays.asList(txtInputNome, txtInputEndereco, comboBoxHorario, txtInputRg, txtInputCpf, txtInputDtNasc, txtInputCelular, txtInputEmail, comboBoxSexo, txtInputTelFixo);

        // Verificar se os campos obrigatórios estão vazios
        for (JComponent campo : obrigatorios) {
            if (campo instanceof JTextField) {
                if (((JTextField) campo).getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Campo obrigatório não preenchido: " + campo.getName());
                    return;
                }
            } else if (campo instanceof JComboBox) {
                if (((JComboBox) campo).getSelectedIndex() == -1) {
                    JOptionPane.showMessageDialog(null, "Campo obrigatório não selecionado: " + campo.getName());
                    return;
                }
            }
        }

        // Se todos os campos obrigatórios estiverem preenchidos,
        // Try incluir o cliente no banco de dados
        try {
            CadCliDAO dao = new CadCliDAO();
            CadCliVO vo = new CadCliVO();

            vo.setNomeAluno(txtInputNome.getText().toUpperCase());
            vo.setEndereco(txtInputEndereco.getText());
            vo.setModalidade(comboBoxHorario.getSelectedItem().toString());
            vo.setRg(txtInputRg.getText());
            vo.setCpf(txtInputCpf.getText());
            vo.setDtnasc(txtInputDtNasc.getText());
            vo.setCelular(txtInputCelular.getText());
            vo.setEmail(txtInputEmail.getText());
            vo.setSexo(comboBoxSexo.getSelectedItem().toString());
            vo.setResponsavel(txtInputTelFixo.getText());

            dao.incluirAluno(vo);

            // Limpar os campos
            limparCampos();

            JOptionPane.showMessageDialog(null, "Cadastro efetuado com sucesso!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao incluir o cliente: " + e.getMessage());
        }

    }

    // FUNCIONA
    private void limparCampos() {
        txtCodigo.setText("");
        txtInputNome.setText("");
        txtInputEndereco.setText("");
        txtInputRg.setText("");
        txtInputCpf.setText("");
        txtInputDtNasc.setText("");
        txtInputCelular.setText("");
        txtInputEmail.setText("");
        txtInputTelFixo.setText("");
        txtInputCelResponsavel.setText("");
        comboBoxHorario.setSelectedIndex(0);
        comboBoxSexo.setSelectedIndex(0);
        txtInputResponsavel.setText("");
    }

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {

        // Habilitando os campos do Cadastro de Clientes para Editá-los
        txtInputNome.setEditable(true);
        txtInputEndereco.setEditable(true);
        txtInputRg.setEditable(true);
        txtInputCpf.setEditable(true);
        txtInputDtNasc.setEditable(true);
        txtInputCelular.setEditable(true);
        txtInputEmail.setEditable(true);
        txtInputTelFixo.setEditable(true);
        txtInputCelResponsavel.setEditable(true);

        // Var que recebe o código digitado pelo usuário e será passado para o método "selectCadCli"
        String com = txtCodigo.getText();

        // Instanciando o CadCliDAO e CadCliVO
        CadCliDAO dao = new CadCliDAO();
        CadCliVO vo = new CadCliVO();

        // Array list
        Collection list = new ArrayList<CadCliVO>();
        list = dao.selectCadCli("codigo", com);
        Iterator i = list.iterator();

        if (list.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Não existe cliente com este código."); // Mostra mensagem
            txtCodigo.setText(""); // Limpa caixa txtCodigo
        }

        // Laço para pegar os dados do BD
        while (i.hasNext()) {
            Object elemento = i.next(); // Objeto iterator
            CadCliVO palavra = (CadCliVO) elemento; // Instanciando CadCliVO para obter dados do BD e colocar nas caixas de txt

            txtInputNome.setText(palavra.getNomeAluno());
            txtInputEndereco.setText(palavra.getEndereco());
            txtInputRg.setText(palavra.getRg());
            txtInputCpf.setText(palavra.getCpf());
            txtInputDtNasc.setText(palavra.getDtnasc());
            txtInputCelular.setText(palavra.getCelular());
            txtInputEmail.setText(palavra.getEmail());
            txtInputTelFixo.setText(palavra.getResponsavel());
            txtInputCelResponsavel.setText(palavra.getCelularResponsavel());

            // Caixa de código falso para editar
            // Botões desabilitados
            btnIncluir.setEnabled(false);
            btnAlterar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnExcluir.setEnabled(false);
            btnConsultar.setEnabled(false);
            btnSair.setEnabled(false);

        }

    }                                            

    // FUNCIONA
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {
        // Limpa os campos
        limparCampos();

        // Botões habilitados
        btnIncluir.setEnabled(true);
        btnAlterar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnExcluir.setEnabled(true);
        btnConsultar.setEnabled(true);
        btnSair.setEnabled(true);

    }

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {
        // Botões habilitados
        btnIncluir.setEnabled(true);
        btnAlterar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnExcluir.setEnabled(true);
        btnConsultar.setEnabled(true);
        btnSair.setEnabled(true);

        // Instanciando as classes necessárias
        CadCliDAO dao = new CadCliDAO();
        CadCliVO vo = new CadCliVO();

        // Verificando se os campos foram preenchidos pelo usuário
        if ((!txtInputNome.getText().equals("")) & (!txtInputEndereco.getText().equals("")) & (!txtInputRg.getText().equals("")) & (!txtInputCpf.getText().equals("")) & (!txtInputDtNasc.getText().equals("")) & (!txtInputCelular.getText().equals("")) & (!txtInputEmail.getText().equals("")) & (!txtInputTelFixo.getText().equals(""))) {

            // Caso preenchido, entra no laço e captura os dados digitados
            vo.setNomeAluno(txtInputNome.getText().toUpperCase());
            vo.setEndereco(txtInputEndereco.getText().toUpperCase());
            vo.setRg(txtInputRg.getText());
            vo.setCpf(txtInputCpf.getText());
            vo.setDtnasc(txtInputDtNasc.getText());
            vo.setCelular(txtInputCelular.getText());
            vo.setEmail(txtInputEmail.getText().toUpperCase());
            vo.setResponsavel(txtInputTelFixo.getText());
            vo.setCelularResponsavel(txtInputCelResponsavel.getText());

            // Chamando o método atualiza cliente na classe DAO
            dao.atualizaCliente(vo);

            // Limpando caixas de texto após alteração
            txtInputNome.setText("");
            txtInputEndereco.setText("");
            txtInputRg.setText("");
            txtInputCpf.setText("");
            txtInputDtNasc.setText("");
            txtInputCelular.setText("");
            txtInputEmail.setText("");
            txtInputTelFixo.setText("");
            txtInputCelResponsavel.setText("");

            // Mensagem para o usuário avisando que foi alterado
            JOptionPane.showMessageDialog(null, "Cliente atualizado.");

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadCliVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadCliVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadCliVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadCliVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadCliVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> comboBoxHorario;
    private javax.swing.JComboBox<String> comboBoxModalidade;
    private javax.swing.JComboBox<String> comboBoxPeriodo;
    private javax.swing.JComboBox<String> comboBoxSexo;
    private javax.swing.JLabel lblCadCli;
    private javax.swing.JLabel lblCelResponsavel;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblDtNasc;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblHorario;
    private javax.swing.JLabel lblModalidade;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPeriodo;
    private javax.swing.JLabel lblResponsavel;
    private javax.swing.JLabel lblRg;
    private javax.swing.JLabel lblSexo1;
    private javax.swing.JLabel lblTelFixo;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtInputCelResponsavel;
    private javax.swing.JTextField txtInputCelular;
    private javax.swing.JTextField txtInputCpf;
    private javax.swing.JTextField txtInputDtNasc;
    private javax.swing.JTextField txtInputEmail;
    private javax.swing.JTextField txtInputEndereco;
    private javax.swing.JTextField txtInputNome;
    private javax.swing.JTextField txtInputResponsavel;
    private javax.swing.JTextField txtInputRg;
    private javax.swing.JTextField txtInputTelFixo;
    // End of variables declaration//GEN-END:variables
}